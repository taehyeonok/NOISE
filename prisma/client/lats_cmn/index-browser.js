
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.12.1
 * Query Engine version: 473ed3124229e22d881cb7addf559799debae1ab
 */
Prisma.prismaVersion = {
  client: "5.12.1",
  engine: "473ed3124229e22d881cb7addf559799debae1ab"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.T_CMN_CAPA_OUT_COOLINGScalarFieldEnum = {
  REGION: 'REGION',
  MODEL: 'MODEL',
  REV_NO: 'REV_NO',
  TYPE: 'TYPE',
  COMBINATION_RATE: 'COMBINATION_RATE',
  TEMP1_VALUE: 'TEMP1_VALUE',
  TEMP2_VALUE: 'TEMP2_VALUE',
  TEMP1_UNIT: 'TEMP1_UNIT',
  TEMP2_UNIT: 'TEMP2_UNIT',
  C1_TC_VALUE: 'C1_TC_VALUE',
  C1_PI_VALUE: 'C1_PI_VALUE',
  C2_TC_VALUE: 'C2_TC_VALUE',
  C2_PI_VALUE: 'C2_PI_VALUE',
  C3_TC_VALUE: 'C3_TC_VALUE',
  C3_PI_VALUE: 'C3_PI_VALUE',
  C4_TC_VALUE: 'C4_TC_VALUE',
  C4_PI_VALUE: 'C4_PI_VALUE',
  C5_TC_VALUE: 'C5_TC_VALUE',
  C5_PI_VALUE: 'C5_PI_VALUE',
  C6_TC_VALUE: 'C6_TC_VALUE',
  C6_PI_VALUE: 'C6_PI_VALUE',
  C7_TC_VALUE: 'C7_TC_VALUE',
  C7_PI_VALUE: 'C7_PI_VALUE',
  USE_YN: 'USE_YN',
  USE_COMMENT: 'USE_COMMENT',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_NO: 'UPDATE_BY_NO',
  CREATED_DATE: 'CREATED_DATE',
  CREATE_BY_NO: 'CREATE_BY_NO',
  Column25: 'Column25',
  Column26: 'Column26',
  Column27: 'Column27',
  Column28: 'Column28',
  Column29: 'Column29',
  Column30: 'Column30',
  Column31: 'Column31',
  Column32: 'Column32',
  Column33: 'Column33'
};

exports.Prisma.T_CMN_CAPA_OUT_HEATINGScalarFieldEnum = {
  REGION: 'REGION',
  MODEL: 'MODEL',
  REV_NO: 'REV_NO',
  TYPE: 'TYPE',
  COMBINATION_RATE: 'COMBINATION_RATE',
  TEMP1_VALUE: 'TEMP1_VALUE',
  TEMP2_VALUE: 'TEMP2_VALUE',
  TEMP1_UNIT: 'TEMP1_UNIT',
  TEMP2_UNIT: 'TEMP2_UNIT',
  C1_TC_VALUE: 'C1_TC_VALUE',
  C1_PI_VALUE: 'C1_PI_VALUE',
  C2_TC_VALUE: 'C2_TC_VALUE',
  C2_PI_VALUE: 'C2_PI_VALUE',
  C3_TC_VALUE: 'C3_TC_VALUE',
  C3_PI_VALUE: 'C3_PI_VALUE',
  C4_TC_VALUE: 'C4_TC_VALUE',
  C4_PI_VALUE: 'C4_PI_VALUE',
  C5_TC_VALUE: 'C5_TC_VALUE',
  C5_PI_VALUE: 'C5_PI_VALUE',
  C6_TC_VALUE: 'C6_TC_VALUE',
  C6_PI_VALUE: 'C6_PI_VALUE',
  C7_TC_VALUE: 'C7_TC_VALUE',
  C7_PI_VALUE: 'C7_PI_VALUE',
  C8_TC_VALUE: 'C8_TC_VALUE',
  C8_PI_VALUE: 'C8_PI_VALUE',
  USE_YN: 'USE_YN',
  USE_COMMENT: 'USE_COMMENT',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_NO: 'UPDATE_BY_NO',
  CREATED_DATE: 'CREATED_DATE',
  CREATE_BY_NO: 'CREATE_BY_NO',
  D: 'D'
};

exports.Prisma.T_CMN_CODEScalarFieldEnum = {
  CODE_GRP_ID: 'CODE_GRP_ID',
  CODE: 'CODE',
  SORT_NO: 'SORT_NO',
  ATTRIBUTE1: 'ATTRIBUTE1',
  ATTRIBUTE2: 'ATTRIBUTE2',
  ATTRIBUTE3: 'ATTRIBUTE3',
  ATTRIBUTE4: 'ATTRIBUTE4',
  ATTRIBUTE5: 'ATTRIBUTE5',
  USE_YN: 'USE_YN',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID',
  ID: 'ID'
};

exports.Prisma.T_CMN_COM_MEMBERScalarFieldEnum = {
  MEMBER_ID: 'MEMBER_ID',
  MEMBER_PASSWORD: 'MEMBER_PASSWORD',
  MEMBER_FIRST_NAME: 'MEMBER_FIRST_NAME',
  MEMBER_LAST_NAME: 'MEMBER_LAST_NAME',
  MEMBER_AUTH: 'MEMBER_AUTH',
  MEMBER_LG_YN: 'MEMBER_LG_YN',
  COUNTRY_NAME: 'COUNTRY_NAME',
  CITY_NAME: 'CITY_NAME',
  REGION: 'REGION',
  COMPANY_NAME: 'COMPANY_NAME',
  JOB_TYPE: 'JOB_TYPE',
  PHONE_NO: 'PHONE_NO',
  ADDRESS1: 'ADDRESS1',
  ADDRESS2: 'ADDRESS2',
  USE_STATUS: 'USE_STATUS',
  LANGUAGE_CODE: 'LANGUAGE_CODE',
  ACCESS_IP: 'ACCESS_IP',
  OLD_PASSWORD: 'OLD_PASSWORD',
  LAST_ACCESS_DATE: 'LAST_ACCESS_DATE',
  LAST_PW_CHANGE_DATE: 'LAST_PW_CHANGE_DATE',
  EMAIL_CONFIRM_KEY: 'EMAIL_CONFIRM_KEY',
  PASSWORD_ERROR_CNT: 'PASSWORD_ERROR_CNT',
  PW_RESET_YN: 'PW_RESET_YN',
  ISSUE_TIME: 'ISSUE_TIME',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID',
  UNIT_CLSS: 'UNIT_CLSS',
  NEW_PASSWORD: 'NEW_PASSWORD',
  MEMBER_TYPE: 'MEMBER_TYPE',
  MEMBER_EMAIL: 'MEMBER_EMAIL',
  BPP_REGION_CODE: 'BPP_REGION_CODE',
  PARTNER_TYPE_CODE: 'PARTNER_TYPE_CODE',
  PARTNER_GRADE_CODE: 'PARTNER_GRADE_CODE',
  US_FEDERATION_ID: 'US_FEDERATION_ID',
  US_SFDC_ID: 'US_SFDC_ID',
  US_CONTACT_ID: 'US_CONTACT_ID',
  US_JOB_TYPE: 'US_JOB_TYPE',
  US_ACCOUNT_ID: 'US_ACCOUNT_ID',
  US_ACCOUNT_CODE: 'US_ACCOUNT_CODE',
  LOGIN_TYPE: 'LOGIN_TYPE',
  LOGIN_TOKEN: 'LOGIN_TOKEN'
};

exports.Prisma.T_CMN_LANGUAGEScalarFieldEnum = {
  CODE: 'CODE',
  HVAC_ID: 'HVAC_ID',
  ENGLISH: 'ENGLISH',
  KOREAN: 'KOREAN',
  FRENCH: 'FRENCH',
  GERMAN: 'GERMAN',
  BRAZILIAN: 'BRAZILIAN',
  CHINESE: 'CHINESE',
  RUSSIAN: 'RUSSIAN',
  TURKISH: 'TURKISH',
  UKRAINIAN: 'UKRAINIAN',
  CZECH: 'CZECH',
  HUNGARIAN: 'HUNGARIAN',
  ITALIANO: 'ITALIANO',
  PORTUGAL: 'PORTUGAL',
  LB_ROMANA: 'LB_ROMANA',
  SPANISH: 'SPANISH',
  POLISH: 'POLISH',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID',
  VIETNAMESE: 'VIETNAMESE',
  CROATIAN: 'CROATIAN',
  DUTCH: 'DUTCH',
  BULGARIAN: 'BULGARIAN',
  SERBIAN: 'SERBIAN',
  JAPANESE: 'JAPANESE',
  ALBANIAN: 'ALBANIAN',
  BOSNIAN: 'BOSNIAN',
  DANISCH: 'DANISCH',
  GREEK: 'GREEK',
  MACEDONIAN: 'MACEDONIAN',
  MONTENEGRIAN: 'MONTENEGRIAN',
  SLOVENIAN: 'SLOVENIAN'
};

exports.Prisma.T_CMN_LOCATIONScalarFieldEnum = {
  ID: 'ID',
  NAME: 'NAME',
  COUNTRY: 'COUNTRY',
  STATE: 'STATE',
  LATITUDE: 'LATITUDE',
  LONGITUDE: 'LONGITUDE',
  ELEVATION: 'ELEVATION',
  OUTDOOR_COOLING_DBT: 'OUTDOOR_COOLING_DBT',
  OUTDOOR_COOLING_WBT: 'OUTDOOR_COOLING_WBT',
  OUTDOOR_COOLING_RH: 'OUTDOOR_COOLING_RH',
  OUTDOOR_HEATING_DBT: 'OUTDOOR_HEATING_DBT',
  F12: 'F12',
  F13: 'F13',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID'
};

exports.Prisma.T_CMN_MEM_REGION_COUNTRYScalarFieldEnum = {
  ID: 'ID',
  MEMBER_REGION: 'MEMBER_REGION',
  MEMBER_COUNTRY: 'MEMBER_COUNTRY',
  ATTRIBUTE1: 'ATTRIBUTE1',
  ATTRIBUTE2: 'ATTRIBUTE2',
  ATTRIBUTE3: 'ATTRIBUTE3',
  ATTRIBUTE4: 'ATTRIBUTE4',
  ATTRIBUTE5: 'ATTRIBUTE5',
  CREATE_BY_ID: 'CREATE_BY_ID',
  CREATE_DATE: 'CREATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE'
};

exports.Prisma.T_CMN_MEM_TERMSScalarFieldEnum = {
  TERMS_SEQ_NO: 'TERMS_SEQ_NO',
  CONTENT_TYPE: 'CONTENT_TYPE',
  REGION_CODE: 'REGION_CODE',
  BODY_CONTENT: 'BODY_CONTENT',
  CREATION_DATE: 'CREATION_DATE',
  CREATED_BY: 'CREATED_BY',
  LAST_UPDATE_DATE: 'LAST_UPDATE_DATE',
  LAST_UPDATED_BY: 'LAST_UPDATED_BY',
  CONTENT_VERSION: 'CONTENT_VERSION',
  LOCALE_TYPE: 'LOCALE_TYPE',
  CORPORATION_CODE: 'CORPORATION_CODE',
  QUESTION_CONTENT: 'QUESTION_CONTENT',
  AGREE_YN: 'AGREE_YN'
};

exports.Prisma.T_CMN_MEM_TERMS_MAPPINGScalarFieldEnum = {
  MEMBER_ID: 'MEMBER_ID',
  TERMS_SEQ_NO: 'TERMS_SEQ_NO',
  APPLY_YN: 'APPLY_YN',
  CREATE_BY_ID: 'CREATE_BY_ID',
  CREATE_DATE: 'CREATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  CONTENT_TYPE: 'CONTENT_TYPE',
  CONTENT_VERSION: 'CONTENT_VERSION',
  CORPORATION_CODE: 'CORPORATION_CODE'
};

exports.Prisma.T_CMN_SETTINGScalarFieldEnum = {
  USER_ID: 'USER_ID',
  LOCALE: 'LOCALE',
  TEMP_UNIT: 'TEMP_UNIT',
  AIR_UNIT: 'AIR_UNIT',
  PRESSURE_UNIT: 'PRESSURE_UNIT',
  CAPACITY_UNIT: 'CAPACITY_UNIT',
  WATERFLOW_UNIT: 'WATERFLOW_UNIT',
  MASS_UNIT: 'MASS_UNIT',
  LENGTH_UNIT: 'LENGTH_UNIT',
  DIAMETER_UNIT: 'DIAMETER_UNIT',
  WATERPRESSURE_UNIT: 'WATERPRESSURE_UNIT',
  ADMIN_YN: 'ADMIN_YN',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_NO: 'CREATE_BY_NO',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_NO: 'UPDATE_BY_NO',
  EXCHANGERVOLUME_UNIT: 'EXCHANGERVOLUME_UNIT',
  UNIT_CLSS: 'UNIT_CLSS'
};

exports.Prisma.T_CMN_SPEC_OUTScalarFieldEnum = {
  LEVEL1: 'LEVEL1',
  LEVEL2: 'LEVEL2',
  LEVEL3: 'LEVEL3',
  REGION: 'REGION',
  COMBINATION_UNIT: 'COMBINATION_UNIT',
  REV_NO: 'REV_NO',
  CHASSIS: 'CHASSIS',
  HP: 'HP',
  TON: 'TON',
  MODEL_INDEX: 'MODEL_INDEX',
  INDEPENDENT_UNIT1: 'INDEPENDENT_UNIT1',
  INDEPENDENT_UNIT2: 'INDEPENDENT_UNIT2',
  INDEPENDENT_UNIT3: 'INDEPENDENT_UNIT3',
  INDEPENDENT_UNIT4: 'INDEPENDENT_UNIT4',
  CAPACITY_COOLING1_RT: 'CAPACITY_COOLING1_RT',
  CAPACITY_COOLING1_KW: 'CAPACITY_COOLING1_KW',
  CAPACITY_COOLING1_KCAL_H: 'CAPACITY_COOLING1_KCAL_H',
  CAPACITY_COOLING1_BTU1_H: 'CAPACITY_COOLING1_BTU1_H',
  CAPACITY_COOLING1_BTU2_H: 'CAPACITY_COOLING1_BTU2_H',
  CAPACITY_COOLING2_RT: 'CAPACITY_COOLING2_RT',
  CAPACITY_COOLING2_KW: 'CAPACITY_COOLING2_KW',
  CAPACITY_COOLING2_KCAL_H: 'CAPACITY_COOLING2_KCAL_H',
  CAPACITY_COOLING2_BTU1_H: 'CAPACITY_COOLING2_BTU1_H',
  CAPACITY_COOLING2_BTU2_H: 'CAPACITY_COOLING2_BTU2_H',
  CAPACITY_HEATING_RT: 'CAPACITY_HEATING_RT',
  CAPACITY_HEATING_KW: 'CAPACITY_HEATING_KW',
  CAPACITY_HEATING_KCAL_H: 'CAPACITY_HEATING_KCAL_H',
  CAPACITY_HEATING_BTU1_H: 'CAPACITY_HEATING_BTU1_H',
  CAPACITY_HEATING_BTU2_H: 'CAPACITY_HEATING_BTU2_H',
  INPUT_COOLING1_KW: 'INPUT_COOLING1_KW',
  INPUT_COOLING2_KW: 'INPUT_COOLING2_KW',
  INPUT_HEATING_KW: 'INPUT_HEATING_KW',
  COP_COOLING1_KW: 'COP_COOLING1_KW',
  COP_COOLING2_KW: 'COP_COOLING2_KW',
  COP_HEATING_KW: 'COP_HEATING_KW',
  POWER_FACTOR_RATED: 'POWER_FACTOR_RATED',
  CASING_STANDARD: 'CASING_STANDARD',
  CASING_ANTI_CORROSION: 'CASING_ANTI_CORROSION',
  HEATING_STANDARD: 'HEATING_STANDARD',
  HEATING_ANTI_CORROSION: 'HEATING_ANTI_CORROSION',
  COMPRESSOR_TYPE: 'COMPRESSOR_TYPE',
  COMPRESSOR_COMBINATION: 'COMPRESSOR_COMBINATION',
  COMPRESSOR_DISPLACEMENT: 'COMPRESSOR_DISPLACEMENT',
  COMPRESSOR_REVOLUTION: 'COMPRESSOR_REVOLUTION',
  COMPRESSOR_MOTOR_OUTPUT: 'COMPRESSOR_MOTOR_OUTPUT',
  COMPRESSOR_MOTOR_OUTPUT_NUMBER: 'COMPRESSOR_MOTOR_OUTPUT_NUMBER',
  COMPRESSOR_STARTING_METHOD: 'COMPRESSOR_STARTING_METHOD',
  COMPRESSOR_OIL_TYPE: 'COMPRESSOR_OIL_TYPE',
  COMPRESSOR_OIL_CHARGE: 'COMPRESSOR_OIL_CHARGE',
  EXCHANGER_TYPE: 'EXCHANGER_TYPE',
  EXCHANGER_MAX_PRESS_RESISTANCE: 'EXCHANGER_MAX_PRESS_RESISTANCE',
  EXCHANGER_HEADLOSS: 'EXCHANGER_HEADLOSS',
  EXCHANGER_WATER_FLOW_LPM: 'EXCHANGER_WATER_FLOW_LPM',
  EXCHANGER_WATER_FLOW_GPM: 'EXCHANGER_WATER_FLOW_GPM',
  RANGE_COOLING: 'RANGE_COOLING',
  CIRCULATION_HEATING: 'CIRCULATION_HEATING',
  REFRIGERANT_PIPES_LIQUID: 'REFRIGERANT_PIPES_LIQUID',
  REFRIGERANT_PIPES_GAS: 'REFRIGERANT_PIPES_GAS',
  REFRIGERANT_PIPES_LOW_GAS: 'REFRIGERANT_PIPES_LOW_GAS',
  REFRIGERANT_PIPES_HIGH_GAS: 'REFRIGERANT_PIPES_HIGH_GAS',
  WATER_PIPES_INLET: 'WATER_PIPES_INLET',
  WATER_PIPES_OUTLET: 'WATER_PIPES_OUTLET',
  WATER_PIPES_DRAIN_OUTLET: 'WATER_PIPES_DRAIN_OUTLET',
  FAN_TYPE: 'FAN_TYPE',
  FAN_MOTER_OUTPUT: 'FAN_MOTER_OUTPUT',
  FAN_AIR_FLOW_M3: 'FAN_AIR_FLOW_M3',
  FAN_AIR_FLOW_FT3: 'FAN_AIR_FLOW_FT3',
  FAN_DRIVE: 'FAN_DRIVE',
  FAN_DISCHARGE: 'FAN_DISCHARGE',
  PIPING_CONNECT_LIQUID: 'PIPING_CONNECT_LIQUID',
  PIPING_LOW_PRESSURE_GAS: 'PIPING_LOW_PRESSURE_GAS',
  PIPING_HIGH_PRESSURE_GAS: 'PIPING_HIGH_PRESSURE_GAS',
  PIPING_GAS: 'PIPING_GAS',
  DIMENSIONS_MM: 'DIMENSIONS_MM',
  DIMENSIONS_INCH: 'DIMENSIONS_INCH',
  NET_WEIGHT_KG: 'NET_WEIGHT_KG',
  NET_WEIGHT_LBS: 'NET_WEIGHT_LBS',
  SOUND_PRESSURE: 'SOUND_PRESSURE',
  SOUND_PRESSURE_COOLING: 'SOUND_PRESSURE_COOLING',
  SOUND_PRESSURE_HEATING: 'SOUND_PRESSURE_HEATING',
  SOUND_POWER: 'SOUND_POWER',
  SOUND_POWER_COOLING: 'SOUND_POWER_COOLING',
  SOUND_POWER_HEATING: 'SOUND_POWER_HEATING',
  PROTECTION_HIGH_PRESSURE: 'PROTECTION_HIGH_PRESSURE',
  PROTECTION_COMPRESSOR: 'PROTECTION_COMPRESSOR',
  PROTECTION_INVERTER: 'PROTECTION_INVERTER',
  CABLE: 'CABLE',
  REFRIGERANT_NAME: 'REFRIGERANT_NAME',
  REFRIGERANT_PRECHARGED_KG: 'REFRIGERANT_PRECHARGED_KG',
  REFRIGERANT_PRECHARGED_LBS: 'REFRIGERANT_PRECHARGED_LBS',
  REFRIGERANT_CONTROL: 'REFRIGERANT_CONTROL',
  POWER_SUPPLY1_V: 'POWER_SUPPLY1_V',
  POWER_SUPPLY1_O: 'POWER_SUPPLY1_O',
  POWER_SUPPLY1_HZ: 'POWER_SUPPLY1_HZ',
  POWER_SUPPLY2_V: 'POWER_SUPPLY2_V',
  POWER_SUPPLY2_O: 'POWER_SUPPLY2_O',
  POWER_SUPPLY2_HZ: 'POWER_SUPPLY2_HZ',
  MAXMUM_INDOOR_UNIT: 'MAXMUM_INDOOR_UNIT',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_NO: 'UPDATE_BY_NO',
  CREATED_DATE: 'CREATED_DATE',
  CREATE_BY_NO: 'CREATE_BY_NO',
  CAPACITY_HEATING_LOW_KW: 'CAPACITY_HEATING_LOW_KW',
  EFF_EERA: 'EFF_EERA',
  GRADE_EFF: 'GRADE_EFF',
  RUNNING_CURRENT_COOLING_A: 'RUNNING_CURRENT_COOLING_A',
  RUNNING_CURRENT_HEATING_A: 'RUNNING_CURRENT_HEATING_A',
  RUNNING_CURRENT_MAX_A: 'RUNNING_CURRENT_MAX_A',
  PACKAGING_SIZE_MM: 'PACKAGING_SIZE_MM',
  PACKAGING_WEIGHT_KG: 'PACKAGING_WEIGHT_KG',
  POWER_CABLE_CV: 'POWER_CABLE_CV',
  POWER_CABLE_H07RN_F: 'POWER_CABLE_H07RN_F',
  BREAKER_SIZE: 'BREAKER_SIZE',
  CAPACITY: 'CAPACITY',
  EER_COP1: 'EER_COP1',
  EER_COP2: 'EER_COP2',
  SEER_SCOP: 'SEER_SCOP',
  SEASONAL_ENERGY_LABEL: 'SEASONAL_ENERGY_LABEL',
  ANNUAL_ENERGY_CONSUMPTION: 'ANNUAL_ENERGY_CONSUMPTION',
  SEER_HSPE1: 'SEER_HSPE1',
  SEER_HSPE2: 'SEER_HSPE2',
  SEER_HSPE3: 'SEER_HSPE3',
  RUNNING_CURRENT_COOLING: 'RUNNING_CURRENT_COOLING',
  RUNNING_CURRENT_HEATING: 'RUNNING_CURRENT_HEATING',
  STARTING_CURRENT_COOLING: 'STARTING_CURRENT_COOLING',
  STARTING_CURRENT_HEATING: 'STARTING_CURRENT_HEATING',
  WRITING_CONNECT_POWER_SUPLY: 'WRITING_CONNECT_POWER_SUPLY',
  WRITING_CONNECT_POWER_COMM: 'WRITING_CONNECT_POWER_COMM',
  COMBINATION_SUM_INDOOR_CAPA: 'COMBINATION_SUM_INDOOR_CAPA',
  COMBINATION_NUM_INDOOR: 'COMBINATION_NUM_INDOOR',
  COMBINATION_NUM_BD: 'COMBINATION_NUM_BD',
  CASING_COLOR: 'CASING_COLOR',
  COMPRESSOR_MODEL: 'COMPRESSOR_MODEL',
  COMPRESSOR_MOTOR_TYPE: 'COMPRESSOR_MOTOR_TYPE',
  REFRIGERANT_TYPE: 'REFRIGERANT_TYPE',
  REFRIGERANT_PRECHARGED_AMOUNT: 'REFRIGERANT_PRECHARGED_AMOUNT',
  REFRIGERANT_CHARGELESS_PIPE1: 'REFRIGERANT_CHARGELESS_PIPE1',
  REFRIGERANT_CHARGELESS_PIPE2: 'REFRIGERANT_CHARGELESS_PIPE2',
  REFRIGERANT_ADDITIONAL_CHARG1: 'REFRIGERANT_ADDITIONAL_CHARG1',
  REFRIGERANT_ADDITIONAL_CHARG2: 'REFRIGERANT_ADDITIONAL_CHARG2',
  REFRIGERANT_OIL_TYPE: 'REFRIGERANT_OIL_TYPE',
  REFRIGERANT_OIL_CHARGED_VOL: 'REFRIGERANT_OIL_CHARGED_VOL',
  HEATING_EXCHANGER1: 'HEATING_EXCHANGER1',
  HEATING_EXCHANGER2: 'HEATING_EXCHANGER2',
  FAN_MOTOR_TYPE: 'FAN_MOTOR_TYPE',
  PIPING_LENGTH_TOTAL: 'PIPING_LENGTH_TOTAL',
  PIPING_LENGTH_MAIN: 'PIPING_LENGTH_MAIN',
  PIPING_LENGTH_TOTAL_BRANCH: 'PIPING_LENGTH_TOTAL_BRANCH',
  PIPING_LENGTH_EACH_BRANCH: 'PIPING_LENGTH_EACH_BRANCH',
  MAXIMUM_HEIGHT_DIFFER1: 'MAXIMUM_HEIGHT_DIFFER1',
  MAXIMUM_HEIGHT_DIFFER2: 'MAXIMUM_HEIGHT_DIFFER2',
  MAXIMUM_HEIGHT_DIFFER3: 'MAXIMUM_HEIGHT_DIFFER3',
  OPERATION_RANGE_COOLING: 'OPERATION_RANGE_COOLING',
  OPERATION_RANGE_HEATING: 'OPERATION_RANGE_HEATING',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  USE_YN: 'USE_YN',
  USE_COMMENT: 'USE_COMMENT'
};

exports.Prisma.T_CMN_UNIT_TABLEScalarFieldEnum = {
  ID: 'ID',
  CODE: 'CODE',
  UNIT: 'UNIT',
  COMBO_INDEX: 'COMBO_INDEX',
  DESCRIPTION: 'DESCRIPTION'
};

exports.Prisma.T_CMN_USAGEScalarFieldEnum = {
  SEQ: 'SEQ',
  PROGRAM: 'PROGRAM',
  USER: 'USER',
  EMAIL: 'EMAIL',
  IP: 'IP',
  COMPANY: 'COMPANY',
  COUNTRY: 'COUNTRY',
  REGION: 'REGION',
  OS_VERSION: 'OS_VERSION',
  PROGRAM_VERSION: 'PROGRAM_VERSION',
  OFFICE_VERSION: 'OFFICE_VERSION',
  AUTODESK_VERSION: 'AUTODESK_VERSION',
  REQUEST_CODE: 'REQUEST_CODE',
  JOBTYPE: 'JOBTYPE',
  MARKETING: 'MARKETING',
  LOGTYPE: 'LOGTYPE',
  USAGETYPE: 'USAGETYPE',
  CREATE_DATE: 'CREATE_DATE',
  ENTITY: 'ENTITY',
  OS_LOCALE: 'OS_LOCALE'
};

exports.Prisma.T_CMN_USAGE_EMP_CNTRY_ENTScalarFieldEnum = {
  USER: 'USER',
  COUNTRY: 'COUNTRY',
  ENTITY: 'ENTITY'
};

exports.Prisma.T_CMN_USAGE_PROG_USE_CODEScalarFieldEnum = {
  USER: 'USER',
  COUNTRY_TEMP: 'COUNTRY_TEMP',
  COUNTRY: 'COUNTRY',
  ENTITY: 'ENTITY'
};

exports.Prisma.T_MASTER_ERV_SPEC_SHEETScalarFieldEnum = {
  MASTER_ID: 'MASTER_ID',
  HVAC_ID: 'HVAC_ID',
  CAD_ID: 'CAD_ID',
  MODEL: 'MODEL',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  VISIBLE: 'VISIBLE',
  LOCATION: 'LOCATION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  ACCESSORY: 'ACCESSORY',
  TYPE: 'TYPE',
  HZ: 'HZ',
  NOMAP_CAPACITY: 'NOMAP_CAPACITY',
  MODEL_HP: 'MODEL_HP',
  POWER_SUPPLY: 'POWER_SUPPLY',
  STEP_ECOV: 'STEP_ECOV',
  CURRENT_ECOV: 'CURRENT_ECOV',
  POWER_INPUT_ECOV: 'POWER_INPUT_ECOV',
  AIR_FLOW_ECOV: 'AIR_FLOW_ECOV',
  EXTERNAL_STATIC_PRESSURE_ECOV: 'EXTERNAL_STATIC_PRESSURE_ECOV',
  TEMP_EXCHANGE_EFF_ECOV: 'TEMP_EXCHANGE_EFF_ECOV',
  ENTHALPY_EXCH_EFF_HEAT_ECOV: 'ENTHALPY_EXCH_EFF_HEAT_ECOV',
  ENTHALPY_EXCH_EFF_COOL_ECOV: 'ENTHALPY_EXCH_EFF_COOL_ECOV',
  NOISE_LEVEL_ECOV: 'NOISE_LEVEL_ECOV',
  BY_PASS_MODE: 'BY_PASS_MODE',
  STEP_BYPASS: 'STEP_BYPASS',
  CURRENT_BYPASS: 'CURRENT_BYPASS',
  POWER_INPUT_BYPASS: 'POWER_INPUT_BYPASS',
  AIR_FLOW_BYPASS: 'AIR_FLOW_BYPASS',
  EXT_STATIC_PRESSURE_BYPASS: 'EXT_STATIC_PRESSURE_BYPASS',
  TEMP_EXCH_EFF_BYPASS: 'TEMP_EXCH_EFF_BYPASS',
  ENTHALPY_EXCH_EFF_HEAT_BYPASS: 'ENTHALPY_EXCH_EFF_HEAT_BYPASS',
  ENTHALPY_EXCH_EFF_COOL_BYPASS: 'ENTHALPY_EXCH_EFF_COOL_BYPASS',
  NOISE_LEVEL_BYPASS: 'NOISE_LEVEL_BYPASS',
  HEAT_EXCHANGER: 'HEAT_EXCHANGER',
  WEIGHT: 'WEIGHT',
  WEIGHT_LBS: 'WEIGHT_LBS',
  DIMENSION: 'DIMENSION',
  PACKING_DIMENSION: 'PACKING_DIMENSION',
  DUCT_WORK_QTY: 'DUCT_WORK_QTY',
  DUCT_WORK_SIZE: 'DUCT_WORK_SIZE',
  SUPPLY_AIR_FAN_QTY: 'SUPPLY_AIR_FAN_QTY',
  SUPPLY_AIR_FAN_TYPE: 'SUPPLY_AIR_FAN_TYPE',
  EXHAUST_AIR_FAN_QTY: 'EXHAUST_AIR_FAN_QTY',
  EXHAUST_AIR_FAN_TYPE: 'EXHAUST_AIR_FAN_TYPE',
  FILTERS_QTY: 'FILTERS_QTY',
  FILTERS_TYPE: 'FILTERS_TYPE',
  FILTERS_SIZE: 'FILTERS_SIZE',
  DESCRIPTION: 'DESCRIPTION',
  PI485: 'PI485',
  DIAMETER: 'DIAMETER',
  DIAMETER_INCH: 'DIAMETER_INCH',
  IMAGE_INDEX: 'IMAGE_INDEX',
  IMAGE_INDEX_CAD: 'IMAGE_INDEX_CAD',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  EXCHANGER_NAME: 'EXCHANGER_NAME',
  EQUIP_TABLE_KO: 'EQUIP_TABLE_KO',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID'
};

exports.Prisma.T_MASTER_ERV_SPEC_SHEET_OLDScalarFieldEnum = {
  MASTER_ID: 'MASTER_ID',
  HVAC_ID: 'HVAC_ID',
  CAD_ID: 'CAD_ID',
  MODEL: 'MODEL',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  VISIBLE: 'VISIBLE',
  LOCATION: 'LOCATION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  ACCESSORY: 'ACCESSORY',
  TYPE: 'TYPE',
  HZ: 'HZ',
  NOMAP_CAPACITY: 'NOMAP_CAPACITY',
  POWER_SUPPLY: 'POWER_SUPPLY',
  STEP_ECOV: 'STEP_ECOV',
  CURRENT_ECOV: 'CURRENT_ECOV',
  POWER_INPUT_ECOV: 'POWER_INPUT_ECOV',
  AIR_FLOW_ECOV: 'AIR_FLOW_ECOV',
  EXTERNAL_STATIC_PRESSURE_ECOV: 'EXTERNAL_STATIC_PRESSURE_ECOV',
  TEMP_EXCHANGE_EFF_ECOV: 'TEMP_EXCHANGE_EFF_ECOV',
  ENTHALPY_EXCH_EFF_HEAT_ECOV: 'ENTHALPY_EXCH_EFF_HEAT_ECOV',
  ENTHALPY_EXCH_EFF_COOL_ECOV: 'ENTHALPY_EXCH_EFF_COOL_ECOV',
  NOISE_LEVEL_ECOV: 'NOISE_LEVEL_ECOV',
  STEP_BYPASS: 'STEP_BYPASS',
  CURRENT_BYPASS: 'CURRENT_BYPASS',
  POWER_INPUT_BYPASS: 'POWER_INPUT_BYPASS',
  AIR_FLOW_BYPASS: 'AIR_FLOW_BYPASS',
  EXT_STATIC_PRESSURE_BYPASS: 'EXT_STATIC_PRESSURE_BYPASS',
  TEMP_EXCH_EFF_BYPASS: 'TEMP_EXCH_EFF_BYPASS',
  ENTHALPY_EXCH_EFF_HEAT_BYPASS: 'ENTHALPY_EXCH_EFF_HEAT_BYPASS',
  ENTHALPY_EXCH_EFF_COOL_BYPASS: 'ENTHALPY_EXCH_EFF_COOL_BYPASS',
  NOISE_LEVEL_BYPASS: 'NOISE_LEVEL_BYPASS',
  HEAT_EXCHANGER: 'HEAT_EXCHANGER',
  WEIGHT: 'WEIGHT',
  WEIGHT_LBS: 'WEIGHT_LBS',
  DIMENSION: 'DIMENSION',
  UNIT_SIZE_INCH: 'UNIT_SIZE_INCH',
  PACKING_DIMENSION: 'PACKING_DIMENSION',
  DUCT_WORK_QTY: 'DUCT_WORK_QTY',
  DUCT_WORK_SIZE: 'DUCT_WORK_SIZE',
  SUPPLY_AIR_FAN_QTY: 'SUPPLY_AIR_FAN_QTY',
  SUPPLY_AIR_FAN_TYPE: 'SUPPLY_AIR_FAN_TYPE',
  EXHAUST_AIR_FAN_QTY: 'EXHAUST_AIR_FAN_QTY',
  EXHAUST_AIR_FAN_TYPE: 'EXHAUST_AIR_FAN_TYPE',
  FILTERS_QTY: 'FILTERS_QTY',
  FILTERS_TYPE: 'FILTERS_TYPE',
  FILTERS_SIZE: 'FILTERS_SIZE',
  STUFFING_QUANTITY: 'STUFFING_QUANTITY',
  AIR_FLOW_SH: 'AIR_FLOW_SH',
  AIR_FLOW_H: 'AIR_FLOW_H',
  AIR_FLOW_L: 'AIR_FLOW_L',
  IMAGE_INDEX: 'IMAGE_INDEX',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  EXCHANGER_NAME: 'EXCHANGER_NAME',
  EQUIP_TABLE_KO: 'EQUIP_TABLE_KO',
  PI485: 'PI485',
  DESCRIPTION: 'DESCRIPTION',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID'
};

exports.Prisma.T_MASTER_MS_DIAMETERScalarFieldEnum = {
  ID: 'ID',
  IDX: 'IDX',
  LIQUID_SI: 'LIQUID_SI',
  GAS_SI: 'GAS_SI',
  LIQUID_FPS: 'LIQUID_FPS',
  GAS_FPS: 'GAS_FPS'
};

exports.Prisma.T_MASTER_MS_IDUScalarFieldEnum = {
  MASTER_ID: 'MASTER_ID',
  HVAC_DB: 'HVAC_DB',
  HVAC_ID: 'HVAC_ID',
  CAD_ID: 'CAD_ID',
  MODEL: 'MODEL',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  LOCATION: 'LOCATION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  VISIBLE: 'VISIBLE',
  IDU_TYPE: 'IDU_TYPE',
  MODEL_TYPE: 'MODEL_TYPE',
  SUB_IDU_MODEL_TYPE: 'SUB_IDU_MODEL_TYPE',
  DESCRIPTION: 'DESCRIPTION',
  HZ: 'HZ',
  REFRIGERANT: 'REFRIGERANT',
  OPER_TYPE: 'OPER_TYPE',
  NOMINAL_CAPACITY: 'NOMINAL_CAPACITY',
  COOLING_CAPACITY: 'COOLING_CAPACITY',
  T_COOL_W: 'T_COOL_W',
  T_COOL_KCAL_H: 'T_COOL_KCAL_H',
  HEATING_CAPACITY: 'HEATING_CAPACITY',
  T_HEAT_W: 'T_HEAT_W',
  T_HEAT_KCAL_H: 'T_HEAT_KCAL_H',
  COOLING_INPUT_POWER: 'COOLING_INPUT_POWER',
  HEATING_INPUT_POWER: 'HEATING_INPUT_POWER',
  POWER_SUPPLY: 'POWER_SUPPLY',
  DIAMETER_ID: 'DIAMETER_ID',
  BASIC_LENGTH: 'BASIC_LENGTH',
  ADD_REFRIGERANT: 'ADD_REFRIGERANT',
  RLA: 'RLA',
  RUN_CURRENT_COOLING: 'RUN_CURRENT_COOLING',
  RUN_CURRENT_HEATING: 'RUN_CURRENT_HEATING',
  FAN_TYPE: 'FAN_TYPE',
  FAN_AIRFLOW_CMM: 'FAN_AIRFLOW_CMM',
  FAN_AIRFLOW_CFM: 'FAN_AIRFLOW_CFM',
  FAN_PRES: 'FAN_PRES',
  FAN_POWER: 'FAN_POWER',
  COOLANT: 'COOLANT',
  WEIGHT: 'WEIGHT',
  WEIGHT_LBS: 'WEIGHT_LBS',
  DIMENSION: 'DIMENSION',
  DIMENSION_INCH: 'DIMENSION_INCH',
  IMAGE_INDEX: 'IMAGE_INDEX',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  SIZE_PANEL: 'SIZE_PANEL',
  SIZE_PANEL_INCH: 'SIZE_PANEL_INCH',
  WIRE_COMM: 'WIRE_COMM',
  WIRE_POWER_CONNECT: 'WIRE_POWER_CONNECT',
  WIRE_POWER_MAIN: 'WIRE_POWER_MAIN',
  WIRE_REMOCON: 'WIRE_REMOCON',
  MCA: 'MCA',
  SOUND_PRESSURE: 'SOUND_PRESSURE',
  SOUND_POWER: 'SOUND_POWER',
  DRAIN_DIAMETER: 'DRAIN_DIAMETER',
  DRAIN_DIAMETER_INCH: 'DRAIN_DIAMETER_INCH',
  EQUIP_TABLE_KO: 'EQUIP_TABLE_KO',
  ACCESSARY: 'ACCESSARY',
  DEFAULT_ACCESSARY: 'DEFAULT_ACCESSARY',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME',
  OBSOLETE: 'OBSOLETE',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID',
  PROGRAM: 'PROGRAM'
};

exports.Prisma.T_MASTER_MS_IDU_ODU_TYPEScalarFieldEnum = {
  ID: 'ID',
  ODU_TYPE: 'ODU_TYPE',
  IDU_TYPE: 'IDU_TYPE',
  CODE_NAME: 'CODE_NAME'
};

exports.Prisma.T_MASTER_MS_ODUScalarFieldEnum = {
  MASTER_ID: 'MASTER_ID',
  HVAC_DB: 'HVAC_DB',
  HVAC_ID: 'HVAC_ID',
  CAD_ID: 'CAD_ID',
  MODEL: 'MODEL',
  HZ: 'HZ',
  REFRIGERANT: 'REFRIGERANT',
  OPER_TYPE: 'OPER_TYPE',
  ODU_TYPE: 'ODU_TYPE',
  NOMINAL_CAPACITY: 'NOMINAL_CAPACITY',
  NUM_IDU: 'NUM_IDU',
  NUM_BDU: 'NUM_BDU',
  WALL_MOUNTED: 'WALL_MOUNTED',
  ARTCOOL: 'ARTCOOL',
  ARTCOOL_MIRROR: 'ARTCOOL_MIRROR',
  ARTCOOL_SILVER: 'ARTCOOL_SILVER',
  CASSETTE_1WAY: 'CASSETTE_1WAY',
  CASSETTE_4WAY: 'CASSETTE_4WAY',
  CONVERTIBLE: 'CONVERTIBLE',
  DUCT_HIGH_STATIC: 'DUCT_HIGH_STATIC',
  DUCT_MID_STATIC: 'DUCT_MID_STATIC',
  COOLING_CAPACITY: 'COOLING_CAPACITY',
  DUCT_LOW_STATIC: 'DUCT_LOW_STATIC',
  DUCT_BUILT_IN: 'DUCT_BUILT_IN',
  FLOOR_STANDING: 'FLOOR_STANDING',
  CONSOLE: 'CONSOLE',
  VAHU_2WAY: 'VAHU_2WAY',
  VAHU_4WAY: 'VAHU_4WAY',
  A_COIL: 'A_COIL',
  CASSETTE_ROUND: 'CASSETTE_ROUND',
  DX_AHU: 'DX_AHU',
  HEATING_CAPACITY: 'HEATING_CAPACITY',
  COOLING_INPUT_POWER: 'COOLING_INPUT_POWER',
  HEATING_INPUT_POWER: 'HEATING_INPUT_POWER',
  COOLING_INDOOR_LOW: 'COOLING_INDOOR_LOW',
  COOLING_INDOOR_HIGH: 'COOLING_INDOOR_HIGH',
  COOLING_OUTDOOR_LOW: 'COOLING_OUTDOOR_LOW',
  COOLING_OUTDOOR_HIGH: 'COOLING_OUTDOOR_HIGH',
  HEATING_INDOOR_LOW: 'HEATING_INDOOR_LOW',
  HEATING_INDOOR_HIGH: 'HEATING_INDOOR_HIGH',
  HEATING_OUTDOOR_LOW: 'HEATING_OUTDOOR_LOW',
  HEATING_OUTDOOR_HIGH: 'HEATING_OUTDOOR_HIGH',
  POWER_SUPPLY: 'POWER_SUPPLY',
  ODU_IMG: 'ODU_IMG',
  CYCLE_CNT: 'CYCLE_CNT',
  BRK_TYPE: 'BRK_TYPE',
  DESCRIPTION: 'DESCRIPTION',
  IS_YCONNECTOR: 'IS_YCONNECTOR',
  YCON_CAPA: 'YCON_CAPA',
  IS_SHORTTUBE: 'IS_SHORTTUBE',
  SHORT_CAPA: 'SHORT_CAPA',
  LOCATION: 'LOCATION',
  ACCESSARY: 'ACCESSARY',
  MCA: 'MCA',
  MOP: 'MOP',
  MODEL_HP: 'MODEL_HP',
  COMP_TYPE: 'COMP_TYPE',
  FAN_TYPE: 'FAN_TYPE',
  FAN_AIRFLOW_CFM: 'FAN_AIRFLOW_CFM',
  FAN_QTY: 'FAN_QTY',
  WEIGHT_LBS: 'WEIGHT_LBS',
  V_HZ: 'V_HZ',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  DEFAULT_ACCESSARY: 'DEFAULT_ACCESSARY',
  VISIBLE: 'VISIBLE',
  BDU_MODEL: 'BDU_MODEL',
  YBR_MODEL: 'YBR_MODEL',
  MAX_COMBI: 'MAX_COMBI',
  SYSTEM_REF_AMOUNT: 'SYSTEM_REF_AMOUNT',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  AIR_CURTAIN: 'AIR_CURTAIN',
  CEILING_FLOOR: 'CEILING_FLOOR',
  CEILING_SUSPENDED: 'CEILING_SUSPENDED',
  HEATING_CAPACITY_10C: 'HEATING_CAPACITY_10C',
  HEATING_INPUT_POWER_10C: 'HEATING_INPUT_POWER_10C',
  IMAGE_INDEX: 'IMAGE_INDEX',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  OBSOLETE: 'OBSOLETE',
  RUN_CURRENT_COOLING: 'RUN_CURRENT_COOLING',
  RUN_CURRENT_HEATING: 'RUN_CURRENT_HEATING',
  RUN_CURRENT_HEATING_10C: 'RUN_CURRENT_HEATING_10C',
  FAN_CMH: 'FAN_CMH',
  FAN_POWER: 'FAN_POWER',
  COMP_COOLANT: 'COMP_COOLANT',
  COMP_POWER: 'COMP_POWER',
  WEIGHT: 'WEIGHT',
  SIZE_UNIT: 'SIZE_UNIT',
  WIRE_COMM: 'WIRE_COMM',
  WIRE_POWER_CV_IDU_BRK: 'WIRE_POWER_CV_IDU_BRK',
  WIRE_POWER_H07RN_F_IDU_BRK: 'WIRE_POWER_H07RN_F_IDU_BRK',
  WIRE_POWER_CV_ODU_BDU: 'WIRE_POWER_CV_ODU_BDU',
  WIRE_POWER_H07RN_F_ODU_BDU: 'WIRE_POWER_H07RN_F_ODU_BDU',
  WIRE_POWER_CV_ODU_IDU: 'WIRE_POWER_CV_ODU_IDU',
  WIRE_POWER_H07RN_F_ODU_IDU: 'WIRE_POWER_H07RN_F_ODU_IDU',
  PI485: 'PI485',
  T_COOL_W: 'T_COOL_W',
  T_COOL_KCAL_H: 'T_COOL_KCAL_H',
  T_HEAT_W: 'T_HEAT_W',
  T_HEAT_KCAL_H: 'T_HEAT_KCAL_H',
  T_HEAT_W_10: 'T_HEAT_W_10',
  T_HEAT_KCAL_H_10: 'T_HEAT_KCAL_H_10',
  SOUND_PRESSURE: 'SOUND_PRESSURE',
  SIZE_UNIT_INCH: 'SIZE_UNIT_INCH',
  EQUIP_TABLE_KO: 'EQUIP_TABLE_KO',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME',
  SOUND_POWER: 'SOUND_POWER',
  PRODUCT_INDEX: 'PRODUCT_INDEX',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID',
  CASSETTE_2WAY: 'CASSETTE_2WAY'
};

exports.Prisma.T_MASTER_MV_BRANCH_NEWScalarFieldEnum = {
  HVAC_ID: 'HVAC_ID',
  CAD_ID: 'CAD_ID',
  MODEL: 'MODEL',
  TYPE_REFRIGERANT: 'TYPE_REFRIGERANT',
  IDU_CAPACITY: 'IDU_CAPACITY',
  IDU_CAPACITY_BTU: 'IDU_CAPACITY_BTU',
  LOCATION: 'LOCATION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  ODUTYPE: 'ODUTYPE',
  GAS_LEFT: 'GAS_LEFT',
  GAS_RIGHT1: 'GAS_RIGHT1',
  GAS_RIGHT2: 'GAS_RIGHT2',
  GAS_LOW_LEFT: 'GAS_LOW_LEFT',
  GAS_LOW_RIGHT1: 'GAS_LOW_RIGHT1',
  GAS_LOW_RIGHT2: 'GAS_LOW_RIGHT2',
  GAS_HIGH_LEFT: 'GAS_HIGH_LEFT',
  GAS_HIGH_RIGHT1: 'GAS_HIGH_RIGHT1',
  GAS_HIGH_RIGHT2: 'GAS_HIGH_RIGHT2',
  LIQUID_LEFT: 'LIQUID_LEFT',
  LIQUID_RIGHT1: 'LIQUID_RIGHT1',
  LIQUID_RIGHT2: 'LIQUID_RIGHT2',
  GAS_SOCKET: 'GAS_SOCKET',
  GAS_LOW_SOCKET: 'GAS_LOW_SOCKET',
  GAS_HIGH_SOCKET: 'GAS_HIGH_SOCKET',
  LIQUID_SOCKET: 'LIQUID_SOCKET',
  DESCRIPTION: 'DESCRIPTION',
  REVISION: 'REVISION',
  VISIBLE: 'VISIBLE',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  CAD_INDEX: 'CAD_INDEX',
  OBSOLETE: 'OBSOLETE',
  IMAGE_INDEX: 'IMAGE_INDEX',
  SYMBOL_INDEX: 'SYMBOL_INDEX'
};

exports.Prisma.T_MASTER_MV_DOASScalarFieldEnum = {
  ID: 'ID',
  MODEL: 'MODEL',
  HZ: 'HZ',
  REFRIGERANT: 'REFRIGERANT',
  TYPE_RUNNING: 'TYPE_RUNNING',
  LOCATION: 'LOCATION',
  TYPE_ODU: 'TYPE_ODU',
  TYPE_ODU2: 'TYPE_ODU2',
  TYPE_IDU: 'TYPE_IDU',
  NOMINAL_CAPACITY: 'NOMINAL_CAPACITY',
  NOMINAL_CAPACITY_BTU: 'NOMINAL_CAPACITY_BTU',
  COOLING_CAPACITY: 'COOLING_CAPACITY',
  HEATING_CAPACITY: 'HEATING_CAPACITY',
  REHEAT_CAPACITY: 'REHEAT_CAPACITY',
  PHASE: 'PHASE',
  MCA_220V: 'MCA_220V',
  MOP_220V: 'MOP_220V',
  MCA_460V: 'MCA_460V',
  MOP_460V: 'MOP_460V',
  DIAMETER: 'DIAMETER',
  DESCRIPTION: 'DESCRIPTION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  PLUSTYPE: 'PLUSTYPE',
  VISIBLE: 'VISIBLE',
  ACCESSORY: 'ACCESSORY',
  DEFAULT_ACCESSARY: 'DEFAULT_ACCESSARY',
  CF: 'CF',
  CF_R32: 'CF_R32',
  IDU_CODE: 'IDU_CODE',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  ESP_SA_MIN: 'ESP_SA_MIN',
  ESP_SA_MAX: 'ESP_SA_MAX',
  ESP_EA_MIN: 'ESP_EA_MIN',
  ESP_EA_MAX: 'ESP_EA_MAX',
  AIRFLOW_SA_MIN: 'AIRFLOW_SA_MIN',
  AIRFLOW_SA_MAX: 'AIRFLOW_SA_MAX',
  AIRFLOW_EA_MIN: 'AIRFLOW_EA_MIN',
  AIRFLOW_EA_MAX: 'AIRFLOW_EA_MAX',
  WEIGHT: 'WEIGHT',
  WEIGHT_LBS: 'WEIGHT_LBS',
  SIZE_UNIT: 'SIZE_UNIT',
  SIZE_UNIT_INCH: 'SIZE_UNIT_INCH',
  SOUND_POWER: 'SOUND_POWER',
  SOUND_PRESSURE: 'SOUND_PRESSURE',
  ISMRE: 'ISMRE',
  ISCOP: 'ISCOP',
  COOLING_INDOOR_LOW: 'COOLING_INDOOR_LOW',
  COOLING_INDOOR_HIGH: 'COOLING_INDOOR_HIGH',
  COOLING_OUTDOOR_LOW: 'COOLING_OUTDOOR_LOW',
  COOLING_OUTDOOR_HIGH: 'COOLING_OUTDOOR_HIGH',
  HEATING_INDOOR_LOW: 'HEATING_INDOOR_LOW',
  HEATING_INDOOR_HIGH: 'HEATING_INDOOR_HIGH',
  HEATING_OUTDOOR_LOW: 'HEATING_OUTDOOR_LOW',
  HEATING_OUTDOOR_HIGH: 'HEATING_OUTDOOR_HIGH',
  ODU_DOAS_ABOVE_HEIGHT: 'ODU_DOAS_ABOVE_HEIGHT',
  ODU_DOAS_BELOW_HEIGHT: 'ODU_DOAS_BELOW_HEIGHT',
  DOAS_DOAS_HEIGHT: 'DOAS_DOAS_HEIGHT',
  INTERNAL_STATIC_PRESSURE: 'INTERNAL_STATIC_PRESSURE',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME',
  CONNECTABLE_ODU_TYPE: 'CONNECTABLE_ODU_TYPE',
  TYPE_PRODUCT: 'TYPE_PRODUCT',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  T_HEAT_KCAL_H: 'T_HEAT_KCAL_H',
  T_HEAT_W: 'T_HEAT_W',
  BREAKER: 'BREAKER',
  T_REHEAT_W: 'T_REHEAT_W',
  T_COOL_W: 'T_COOL_W',
  IMAGE_INDEX: 'IMAGE_INDEX',
  T_COOL_KCAL_H: 'T_COOL_KCAL_H',
  T_REHEAT_KCAL_H: 'T_REHEAT_KCAL_H',
  RUN_CURRENT_HEATING: 'RUN_CURRENT_HEATING',
  RUN_CURRENT_COOLING: 'RUN_CURRENT_COOLING',
  DRAIN_DIAMETER: 'DRAIN_DIAMETER',
  WIRE_POWER_H07RN_F: 'WIRE_POWER_H07RN_F',
  FAN_TYPE: 'FAN_TYPE',
  FAN_POWER: 'FAN_POWER',
  POWER_SUPPLY: 'POWER_SUPPLY',
  WIRE_COMM: 'WIRE_COMM',
  EQUIP_TABLE_KO: 'EQUIP_TABLE_KO'
};

exports.Prisma.T_MASTER_MV_HEADERScalarFieldEnum = {
  HVAC_ID: 'HVAC_ID',
  CAD_ID: 'CAD_ID',
  MODEL: 'MODEL',
  NUM_DISTRIBUTION: 'NUM_DISTRIBUTION',
  IDU_CAPACITY: 'IDU_CAPACITY',
  IDU_CAPACITY_BTU: 'IDU_CAPACITY_BTU',
  PIPINGPARE_RIGHT: 'PIPINGPARE_RIGHT',
  GAS_LEFT: 'GAS_LEFT',
  GAS_RIGHT: 'GAS_RIGHT',
  LIQUID_LEFT: 'LIQUID_LEFT',
  LIQUID_RIGHT: 'LIQUID_RIGHT',
  DIAMETER: 'DIAMETER',
  DESCRIPTION: 'DESCRIPTION',
  LOCATION: 'LOCATION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  VISIBLE: 'VISIBLE',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  GENERATION: 'GENERATION',
  MCA: 'MCA',
  CAD_INDEX: 'CAD_INDEX',
  ODUTYPE: 'ODUTYPE',
  IMAGE_INDEX: 'IMAGE_INDEX',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME'
};

exports.Prisma.T_MASTER_MV_ODUScalarFieldEnum = {
  MASTER_ID: 'MASTER_ID',
  HVAC_DB: 'HVAC_DB',
  HVAC_ID: 'HVAC_ID',
  CAD_ID: 'CAD_ID',
  MODEL: 'MODEL',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  LOCATION: 'LOCATION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  VISIBLE: 'VISIBLE',
  TYPE_ODU: 'TYPE_ODU',
  SYSTEM_CHECK_CODE: 'SYSTEM_CHECK_CODE',
  DESCRIPTION: 'DESCRIPTION',
  PLUS_TYPE: 'PLUS_TYPE',
  CODE_MULTILINK: 'CODE_MULTILINK',
  HZ: 'HZ',
  VOLTS: 'VOLTS',
  VOLTAGE: 'VOLTAGE',
  POWER_SUPPLY: 'POWER_SUPPLY',
  REFRIGERANT: 'REFRIGERANT',
  TYPE_RUNNING: 'TYPE_RUNNING',
  COMBINATION: 'COMBINATION',
  CONNECTION_BRPIPE: 'CONNECTION_BRPIPE',
  MODEL_HP: 'MODEL_HP',
  NOMINAL_CAPACITY: 'NOMINAL_CAPACITY',
  NOMINAL_CAPACITY_BTU: 'NOMINAL_CAPACITY_BTU',
  COOLING_CAPACITY: 'COOLING_CAPACITY',
  T_COOL_W: 'T_COOL_W',
  T_COOL_KCAL_H: 'T_COOL_KCAL_H',
  COOLING_CAPACITY2: 'COOLING_CAPACITY2',
  T_COOL_W_43: 'T_COOL_W_43',
  T_COOL_KCAL_H_43: 'T_COOL_KCAL_H_43',
  HEATING_CAPACITY: 'HEATING_CAPACITY',
  T_HEAT_W: 'T_HEAT_W',
  T_HEAT_KCAL_H: 'T_HEAT_KCAL_H',
  HEATING_CAPACITY_10C: 'HEATING_CAPACITY_10C',
  T_HEAT_W_10: 'T_HEAT_W_10',
  T_HEAT_KCAL_H_10: 'T_HEAT_KCAL_H_10',
  HEATING_CAPACITY_15C: 'HEATING_CAPACITY_15C',
  T_HEAT_W_15: 'T_HEAT_W_15',
  T_HEAT_KCAL_H_15: 'T_HEAT_KCAL_H_15',
  HEATING_CAPACITY_25C: 'HEATING_CAPACITY_25C',
  T_HEAT_W_25: 'T_HEAT_W_25',
  T_HEAT_KCAL_H_25: 'T_HEAT_KCAL_H_25',
  COOLING_INPUT_POWER: 'COOLING_INPUT_POWER',
  COOLING_INPUT_POWER2: 'COOLING_INPUT_POWER2',
  HEATING_INPUT_POWER: 'HEATING_INPUT_POWER',
  HEATING_INPUT_POWER_10C: 'HEATING_INPUT_POWER_10C',
  HEATING_INPUT_POWER_15C: 'HEATING_INPUT_POWER_15C',
  HEATING_INPUT_POWER_25C: 'HEATING_INPUT_POWER_25C',
  MAX_CURRENT: 'MAX_CURRENT',
  RUN_CURRENT_COOLING: 'RUN_CURRENT_COOLING',
  RUN_CURRENT_HEATING: 'RUN_CURRENT_HEATING',
  RUN_CURRENT_HEATING_10C: 'RUN_CURRENT_HEATING_10C',
  RUN_CURRENT_HEATING_15C: 'RUN_CURRENT_HEATING_15C',
  RUN_CURRENT_HEATING_25C: 'RUN_CURRENT_HEATING_25C',
  MAX_COMBI_POWERRATE: 'MAX_COMBI_POWERRATE',
  MIN_COMBI_POWERRATE: 'MIN_COMBI_POWERRATE',
  NUM_IDU: 'NUM_IDU',
  NUM_IDU_2: 'NUM_IDU_2',
  DIAMETER: 'DIAMETER',
  DIAMETER_INCREASED: 'DIAMETER_INCREASED',
  COMP_TYPE: 'COMP_TYPE',
  COMP_COOLANT: 'COMP_COOLANT',
  COMP_POWER: 'COMP_POWER',
  FAN_TYPE: 'FAN_TYPE',
  FAN_QTY: 'FAN_QTY',
  NO_OF_DISCHARGE: 'NO_OF_DISCHARGE',
  DISCHARGE_TYPE: 'DISCHARGE_TYPE',
  FAN_POWER: 'FAN_POWER',
  FAN_CMH: 'FAN_CMH',
  FAN_AIRFLOW_CFM: 'FAN_AIRFLOW_CFM',
  FAN_CFM: 'FAN_CFM',
  WEIGHT: 'WEIGHT',
  WEIGHT_LBS: 'WEIGHT_LBS',
  SIZE_UNIT: 'SIZE_UNIT',
  SIZE_UNIT_INCH: 'SIZE_UNIT_INCH',
  IMAGEINDEX_ODU: 'IMAGEINDEX_ODU',
  IMAGE_INDEX: 'IMAGE_INDEX',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  BREAKER: 'BREAKER',
  MCA: 'MCA',
  MOP: 'MOP',
  SYSTEM_REF_AMOUNT: 'SYSTEM_REF_AMOUNT',
  SOUND_PRESSURE: 'SOUND_PRESSURE',
  SOUND_POWER: 'SOUND_POWER',
  WIRE_COMM: 'WIRE_COMM',
  WIRE_POWER_CV: 'WIRE_POWER_CV',
  WIRE_POWER_H07RN_F: 'WIRE_POWER_H07RN_F',
  PI485: 'PI485',
  BREAKERINDOORS: 'BREAKERINDOORS',
  CORRECTION_FACTOR: 'CORRECTION_FACTOR',
  CORRECTION_FACTOR_EL_COOLING: 'CORRECTION_FACTOR_EL_COOLING',
  CORRECTION_FACTOR_EL_HEATING: 'CORRECTION_FACTOR_EL_HEATING',
  POWER_FACTOR: 'POWER_FACTOR',
  FOOT_PRINT: 'FOOT_PRINT',
  POWERAT10: 'POWERAT10',
  POWERAT15: 'POWERAT15',
  IEER: 'IEER',
  COP: 'COP',
  DEFAULT_WATERFLOW: 'DEFAULT_WATERFLOW',
  COND_TYPE: 'COND_TYPE',
  COND_LOSS: 'COND_LOSS',
  COND_PRES: 'COND_PRES',
  COND_FLOW: 'COND_FLOW',
  COND_DIA: 'COND_DIA',
  EVA_TYPE: 'EVA_TYPE',
  EVA_LOSS: 'EVA_LOSS',
  EVA_PRES: 'EVA_PRES',
  EVA_FLOW: 'EVA_FLOW',
  EVA_DIA: 'EVA_DIA',
  WATER_DRAIN: 'WATER_DRAIN',
  COND_LOSS_PSIA: 'COND_LOSS_PSIA',
  COND_PRES_PSIA: 'COND_PRES_PSIA',
  COND_FLOW_GPM: 'COND_FLOW_GPM',
  STARTING_CURRENT: 'STARTING_CURRENT',
  GAS_TYPE: 'GAS_TYPE',
  GAS_PRESSURE: 'GAS_PRESSURE',
  COOLING_GAS: 'COOLING_GAS',
  HEATING_GAS: 'HEATING_GAS',
  COMP_OIL: 'COMP_OIL',
  COMP_CRANKCASE: 'COMP_CRANKCASE',
  ENGINE_OIL: 'ENGINE_OIL',
  ENGINE_RPM: 'ENGINE_RPM',
  ENGINE_MOTER: 'ENGINE_MOTER',
  ENGINE_SYSTEM: 'ENGINE_SYSTEM',
  ENGINE_POWER: 'ENGINE_POWER',
  ENGINE_COOLANT_AMOUNT: 'ENGINE_COOLANT_AMOUNT',
  ENGINE_COOLANT_INFRO: 'ENGINE_COOLANT_INFRO',
  COOLANT_PUMP: 'COOLANT_PUMP',
  GAS_PIPE: 'GAS_PIPE',
  EXHAUST_DRAIN_PIPE: 'EXHAUST_DRAIN_PIPE',
  DRAIN_HEATER: 'DRAIN_HEATER',
  EFFICIENCY_KO: 'EFFICIENCY_KO',
  EFFI_GRADE_KO: 'EFFI_GRADE_KO',
  COOLING_TOTAL_POWER_KO: 'COOLING_TOTAL_POWER_KO',
  HEATING_TOTAL_POWER_KO: 'HEATING_TOTAL_POWER_KO',
  COOLING_INDOOR_LOW: 'COOLING_INDOOR_LOW',
  COOLING_INDOOR_HIGH: 'COOLING_INDOOR_HIGH',
  COOLING_OUTDOOR_LOW: 'COOLING_OUTDOOR_LOW',
  COOLING_OUTDOOR_HIGH: 'COOLING_OUTDOOR_HIGH',
  HEATING_INDOOR_LOW: 'HEATING_INDOOR_LOW',
  HEATING_INDOOR_HIGH: 'HEATING_INDOOR_HIGH',
  HEATING_OUTDOOR_LOW: 'HEATING_OUTDOOR_LOW',
  HEATING_OUTDOOR_HIGH: 'HEATING_OUTDOOR_HIGH',
  TOTAL_LENGTH: 'TOTAL_LENGTH',
  ODU_IDU_ABOVE_HEIGHT: 'ODU_IDU_ABOVE_HEIGHT',
  ODU_IDU_BELOW_HEIGHT: 'ODU_IDU_BELOW_HEIGHT',
  IDU_IDU_HEIGHT: 'IDU_IDU_HEIGHT',
  REAL_LONGEST_LENGTH: 'REAL_LONGEST_LENGTH',
  LONGEST_LENGTH: 'LONGEST_LENGTH',
  LONGEST_LENGTH_FROM_BR: 'LONGEST_LENGTH_FROM_BR',
  LENGTH_INCREASED_DIAMETER: 'LENGTH_INCREASED_DIAMETER',
  ACCESSORY: 'ACCESSORY',
  ACCESSORY_OLD: 'ACCESSORY_OLD',
  DEFAULT_ACCESSARY: 'DEFAULT_ACCESSARY',
  DEFAULT_ACCESSARY_OLD: 'DEFAULT_ACCESSARY_OLD',
  EQUIP_TABLE_KO: 'EQUIP_TABLE_KO',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME',
  CONNECTED_ODU: 'CONNECTED_ODU',
  SUFFIX: 'SUFFIX',
  HEATING_15_CAPACITY: 'HEATING_15_CAPACITY',
  MULTIV_M_SETMODEL: 'MULTIV_M_SETMODEL',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID'
};

exports.Prisma.T_MASTER_THERMAV_IDUScalarFieldEnum = {
  PROGRAM: 'PROGRAM',
  ID: 'ID',
  MODEL: 'MODEL',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  APP_LOCATION: 'APP_LOCATION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  VISIBLE: 'VISIBLE',
  DESCRIPTION: 'DESCRIPTION',
  ACCESSARY: 'ACCESSARY',
  ACC_DEFAULT: 'ACC_DEFAULT',
  IMAGE_INDEX: 'IMAGE_INDEX',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  HZ: 'HZ',
  REFRIGERANT: 'REFRIGERANT',
  TYPE_RUNNING: 'TYPE_RUNNING',
  IDU_TYPE: 'IDU_TYPE',
  TYPE_IDU: 'TYPE_IDU',
  NOMINAL_CAPACITY: 'NOMINAL_CAPACITY',
  COOLING_CAPACITY: 'COOLING_CAPACITY',
  HEATING_CAPACITY: 'HEATING_CAPACITY',
  T_COOL_W: 'T_COOL_W',
  T_COOL_KCAL_H: 'T_COOL_KCAL_H',
  T_HEAT_W: 'T_HEAT_W',
  T_HEAT_KCAL_H: 'T_HEAT_KCAL_H',
  POWER_SUPPLY: 'POWER_SUPPLY',
  DIAMETER: 'DIAMETER',
  BASIC_LENGTH: 'BASIC_LENGTH',
  ADD_REFRIGERANT: 'ADD_REFRIGERANT',
  COOLING_INPUT_POWER: 'COOLING_INPUT_POWER',
  HEATING_INPUT_POWER: 'HEATING_INPUT_POWER',
  RUN_CURRENT_COOLING: 'RUN_CURRENT_COOLING',
  RUN_CURRENT_HEATING: 'RUN_CURRENT_HEATING',
  RUN_CURRENT_RATED: 'RUN_CURRENT_RATED',
  RUN_CURRENT_MAXIMUM: 'RUN_CURRENT_MAXIMUM',
  FAN_TYPE: 'FAN_TYPE',
  FAN_CMH: 'FAN_CMH',
  FAN_CFM: 'FAN_CFM',
  FAN_PRES: 'FAN_PRES',
  FAN_POWER: 'FAN_POWER',
  COOLANT: 'COOLANT',
  WEIGHT: 'WEIGHT',
  WEIGHT_LBS: 'WEIGHT_LBS',
  DRAIN_DIAMETER: 'DRAIN_DIAMETER',
  DRAIN_DIAMETER_INCH: 'DRAIN_DIAMETER_INCH',
  SIZE_UNIT: 'SIZE_UNIT',
  SIZE_PANEL: 'SIZE_PANEL',
  SIZE_UNIT_INCH: 'SIZE_UNIT_INCH',
  SIZE_PANEL_INCH: 'SIZE_PANEL_INCH',
  WIRE_COMM: 'WIRE_COMM',
  WIRE_POWER_CONNECT: 'WIRE_POWER_CONNECT',
  WIRE_POWER_MAIN: 'WIRE_POWER_MAIN',
  WIRE_REMOCON: 'WIRE_REMOCON',
  MCA: 'MCA',
  SOUND_PRESSURE: 'SOUND_PRESSURE',
  PIPE_LIQUID: 'PIPE_LIQUID',
  PIPE_GAS: 'PIPE_GAS',
  PIPE_INLET: 'PIPE_INLET',
  PIPE_OUTLET: 'PIPE_OUTLET',
  HEAT_EXCHANGER_TYPE: 'HEAT_EXCHANGER_TYPE',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME',
  EQUIP_TABLE_KO: 'EQUIP_TABLE_KO'
};

exports.Prisma.T_MASTER_THERMAV_ODUScalarFieldEnum = {
  PROGRAM: 'PROGRAM',
  ID: 'ID',
  MODEL: 'MODEL',
  BUYER_MODEL_NAME: 'BUYER_MODEL_NAME',
  APP_LOCATION: 'APP_LOCATION',
  NOTUSEDCOUNTRY: 'NOTUSEDCOUNTRY',
  VISIBLE_CAD: 'VISIBLE_CAD',
  VISIBLE: 'VISIBLE',
  TYPE_ODU: 'TYPE_ODU',
  TYPE_ODU_THERMAV: 'TYPE_ODU_THERMAV',
  TYPE_TEMP: 'TYPE_TEMP',
  DESCRIPTION: 'DESCRIPTION',
  ACCESSARY: 'ACCESSARY',
  ACC_DEFAULT: 'ACC_DEFAULT',
  HZ: 'HZ',
  REFRIGERANT: 'REFRIGERANT',
  TYPE_RUNNING: 'TYPE_RUNNING',
  NOMINAL_CAPACITY: 'NOMINAL_CAPACITY',
  COOLING_CAPACITY: 'COOLING_CAPACITY',
  HEATING_CAPACITY: 'HEATING_CAPACITY',
  COOLING_CAPACITY_RT: 'COOLING_CAPACITY_RT',
  HEATING_CAPACITY_RT: 'HEATING_CAPACITY_RT',
  T_COOL_W: 'T_COOL_W',
  T_COOL_KCAL_H: 'T_COOL_KCAL_H',
  T_COOL_BTU_H: 'T_COOL_BTU_H',
  T_HEAT_W: 'T_HEAT_W',
  T_HEAT_KCAL_H: 'T_HEAT_KCAL_H',
  T_HEAT_BTU_H: 'T_HEAT_BTU_H',
  COOLING_INPUT_POWER: 'COOLING_INPUT_POWER',
  HEATING_INPUT_POWER: 'HEATING_INPUT_POWER',
  COOLING_INDOOR_LOW: 'COOLING_INDOOR_LOW',
  COOLING_INDOOR_HIGH: 'COOLING_INDOOR_HIGH',
  COOLING_OUTDOOR_LOW: 'COOLING_OUTDOOR_LOW',
  COOLING_OUTDOOR_HIGH: 'COOLING_OUTDOOR_HIGH',
  HEATING_INDOOR_HIGH: 'HEATING_INDOOR_HIGH',
  HEATING_OUTDOOR_LOW: 'HEATING_OUTDOOR_LOW',
  HEATING_OUTDOOR_HIGH: 'HEATING_OUTDOOR_HIGH',
  POWER_SUPPLY: 'POWER_SUPPLY',
  PHASE: 'PHASE',
  BREAKER: 'BREAKER',
  IMAGE_INDEX: 'IMAGE_INDEX',
  SYMBOL_INDEX: 'SYMBOL_INDEX',
  RUN_CURRENT_MAX: 'RUN_CURRENT_MAX',
  CURRENT_COOL: 'CURRENT_COOL',
  CURRENT_HEAT: 'CURRENT_HEAT',
  FAN_TYPE: 'FAN_TYPE',
  FAN_CMH: 'FAN_CMH',
  FAN_CFM: 'FAN_CFM',
  FAN_POWER: 'FAN_POWER',
  COMP_COOLANT: 'COMP_COOLANT',
  COMP_TYPE: 'COMP_TYPE',
  COMP_POWER: 'COMP_POWER',
  WEIGHT: 'WEIGHT',
  WEIGHT_LBS: 'WEIGHT_LBS',
  SIZE_UNIT: 'SIZE_UNIT',
  SIZE_UNIT_INCH: 'SIZE_UNIT_INCH',
  WIRE_COMM: 'WIRE_COMM',
  MCA: 'MCA',
  SOUND_PRESSURE: 'SOUND_PRESSURE',
  PIPE_INLET: 'PIPE_INLET',
  PIPE_OUTLET: 'PIPE_OUTLET',
  PIPE_LIQUID: 'PIPE_LIQUID',
  PIPE_GAS: 'PIPE_GAS',
  HEAT_EXCHANGER_TYPE: 'HEAT_EXCHANGER_TYPE',
  WATER_FLOW_LPM: 'WATER_FLOW_LPM',
  WATER_FLOW_GPM: 'WATER_FLOW_GPM',
  SYSTEM_REF_AMOUNT: 'SYSTEM_REF_AMOUNT',
  REVIT_FAMILY_NAME: 'REVIT_FAMILY_NAME',
  COOLING_EER: 'COOLING_EER',
  HEATING_COP: 'HEATING_COP',
  HEATER_BUILTIN: 'HEATER_BUILTIN',
  HEATER_ACC: 'HEATER_ACC',
  COOL_LEAVING_TEMP_LOW: 'COOL_LEAVING_TEMP_LOW',
  COOL_LEAVING_TEMP_HIGH: 'COOL_LEAVING_TEMP_HIGH',
  HEAT_LEAVING_TEMP_LOW: 'HEAT_LEAVING_TEMP_LOW',
  HEAT_LEAVING_TEMP_HIGH: 'HEAT_LEAVING_TEMP_HIGH',
  SOUND_LOW: 'SOUND_LOW',
  SOUND_MAX: 'SOUND_MAX',
  HEATING_INDOOR_LOW: 'HEATING_INDOOR_LOW',
  EQUIP_TABLE_KO: 'EQUIP_TABLE_KO'
};

exports.Prisma.Error_logScalarFieldEnum = {
  error_log_id: 'error_log_id',
  proc_name: 'proc_name',
  proc_step: 'proc_step',
  sql_state: 'sql_state',
  error_no: 'error_no',
  error_msg: 'error_msg',
  call_stack: 'call_stack',
  proc_call_date: 'proc_call_date',
  log_date: 'log_date'
};

exports.Prisma.T_CMN_LATS_SUPPORTScalarFieldEnum = {
  SEQ: 'SEQ',
  PROGRAM: 'PROGRAM',
  TYPE: 'TYPE',
  PROJECT_SEQ: 'PROJECT_SEQ',
  TITLE: 'TITLE',
  CONTENTS: 'CONTENTS',
  CREATE_DATE: 'CREATE_DATE',
  CREATE_BY_ID: 'CREATE_BY_ID',
  UPDATE_DATE: 'UPDATE_DATE',
  UPDATE_BY_ID: 'UPDATE_BY_ID'
};

exports.Prisma.T_CMN_LATS_VERSIONScalarFieldEnum = {
  SEQ: 'SEQ',
  PROGRAM_NAME: 'PROGRAM_NAME',
  VERSION: 'VERSION',
  RELEASE_NOTE: 'RELEASE_NOTE',
  CREATE_DATE: 'CREATE_DATE',
  UPDATE_DATE: 'UPDATE_DATE'
};

exports.Prisma.T_CMN_USAGE_ERROR_LOGScalarFieldEnum = {
  ID: 'ID',
  ERROR_DATA: 'ERROR_DATA',
  ERROR_MESSAGE: 'ERROR_MESSAGE',
  ERROR_TIMESTAMP: 'ERROR_TIMESTAMP',
  PROCESSED: 'PROCESSED'
};

exports.Prisma.V_CMN_LANGUAGEScalarFieldEnum = {
  CODE: 'CODE',
  HVAC_ID: 'HVAC_ID',
  MESSAGE: 'MESSAGE',
  LOCALE: 'LOCALE'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  T_CMN_CAPA_OUT_COOLING: 'T_CMN_CAPA_OUT_COOLING',
  T_CMN_CAPA_OUT_HEATING: 'T_CMN_CAPA_OUT_HEATING',
  T_CMN_CODE: 'T_CMN_CODE',
  T_CMN_COM_MEMBER: 'T_CMN_COM_MEMBER',
  T_CMN_LANGUAGE: 'T_CMN_LANGUAGE',
  T_CMN_LOCATION: 'T_CMN_LOCATION',
  T_CMN_MEM_REGION_COUNTRY: 'T_CMN_MEM_REGION_COUNTRY',
  T_CMN_MEM_TERMS: 'T_CMN_MEM_TERMS',
  T_CMN_MEM_TERMS_MAPPING: 'T_CMN_MEM_TERMS_MAPPING',
  T_CMN_SETTING: 'T_CMN_SETTING',
  T_CMN_SPEC_OUT: 'T_CMN_SPEC_OUT',
  T_CMN_UNIT_TABLE: 'T_CMN_UNIT_TABLE',
  T_CMN_USAGE: 'T_CMN_USAGE',
  T_CMN_USAGE_EMP_CNTRY_ENT: 'T_CMN_USAGE_EMP_CNTRY_ENT',
  T_CMN_USAGE_PROG_USE_CODE: 'T_CMN_USAGE_PROG_USE_CODE',
  T_MASTER_ERV_SPEC_SHEET: 'T_MASTER_ERV_SPEC_SHEET',
  T_MASTER_ERV_SPEC_SHEET_OLD: 'T_MASTER_ERV_SPEC_SHEET_OLD',
  T_MASTER_MS_DIAMETER: 'T_MASTER_MS_DIAMETER',
  T_MASTER_MS_IDU: 'T_MASTER_MS_IDU',
  T_MASTER_MS_IDU_ODU_TYPE: 'T_MASTER_MS_IDU_ODU_TYPE',
  T_MASTER_MS_ODU: 'T_MASTER_MS_ODU',
  T_MASTER_MV_BRANCH_NEW: 'T_MASTER_MV_BRANCH_NEW',
  T_MASTER_MV_DOAS: 'T_MASTER_MV_DOAS',
  T_MASTER_MV_HEADER: 'T_MASTER_MV_HEADER',
  T_MASTER_MV_ODU: 'T_MASTER_MV_ODU',
  T_MASTER_THERMAV_IDU: 'T_MASTER_THERMAV_IDU',
  T_MASTER_THERMAV_ODU: 'T_MASTER_THERMAV_ODU',
  error_log: 'error_log',
  T_CMN_LATS_SUPPORT: 'T_CMN_LATS_SUPPORT',
  T_CMN_LATS_VERSION: 'T_CMN_LATS_VERSION',
  T_CMN_USAGE_ERROR_LOG: 'T_CMN_USAGE_ERROR_LOG',
  V_CMN_LANGUAGE: 'V_CMN_LANGUAGE'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
